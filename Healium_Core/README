Version 3.0.1Cleanse dispel magic only if spell 53551 is known for paladin (or holy spec and level >= 20)Righteous Fury removedBlacklist/Whitelist/Dispellable/SpellList.Buffs optimized (key on spellName instead of simple index)SpellID added in buff/debuff tooltip is shift key downAdditional buff/debuff parameters: display = "value1" | "value2" | "value3" (allow to display value1, value2, value3  using local name, _, icon, count, _, duration, expirationTime, unitCaster, _, _, spellID, canApplyAura, isBossDebuff, value1, value2, value3 = UnitBuff(unit, i, filter))  this value is displayed in buff.shield or debuff.shield could monitor power word shield (value1) or even debuff searing plasma during fight spine of deathwing (value1)  DEBUFF inactive for the momentVersion 3.0HealiumCore doesn't handle spell list anymore. It contains only a list of predefined spells for each classHealiumCore users must call RegisterSpellList(settingName, spellList [, buffList]) and ActivateSpellList(settingName) to set a spell/buff list (only while not in combat)Version 2.6TOC update for Mists of PandariaButtonHeaders contains only valid/known spells/macrosPLAYER_SPECIALIZATION_CHANGED used instead complex respec detection -> allows to dynamically change spells/macros on buttons (out of combat of course)buttonHeader.hInitialized and buttonHeader.hInvalid removedVersion 2.5.1Display buff casted by playerVersion 2.5buff/debuff CD is hidden when a shield is active on buff/debuffVersion 2.4Shields fixedGUID<->unit mapping removed (useless with new shields handling)2 hours to find a memory leak which is not one but an optimization I've done in GetSpellID a few weeks ago :p (mapping of spellName<->spellID ~= 2Mb)Version 2.3Bug fixed in debuff prereqBug fixed with dual talentsVersion 2.2Events handled in different functionsShields buff/debuff absorbing heal/damage monitoring addedGUID<->unit mapping addedVersion 2.1Bug fixed with heal buttonsPerform PLAYER_ENTERING_WORLD only onceVersion 2.0Prereq/Dispel highlight optimized (70% less UpdateButtonColor)Bug fixed with holy priest: Holy Word: Chastise(88625) becomes Holy Word: Serenity(88684) or Holy Word: Sanctuary(88685) in function of Chakra state ==> must use BookSpellID instead of SpellID and update button icon when Chakra is activated -> new check in UpdateFrameBuffsDebuffsXXX, if affected by Chakra: Sanctuary(81207) display spell Holy Word: Sanctuary(88685), when affected by Chakra: Serenity(81208) display spell Holy Word: Serenity(88684) -> new option in spell list  transforms = { [buffID] = spellID, ... }  when 'player' is affected by buffID, spell is modified to spellIDBug fixed with FlashFrame: SetFrameStrata/SetFrameLevel not authorised while in combatBug fixed with UpdateButtonColor optimizationBug fixed in buff tooltip activationPredefined list of spells added for each specMemory usage optimized: ButtonHeaders store information such as OOM, spellID, spellName, ...  button contains a ptr to this headerStyle added -> UI removed, additional parameter in RegisterFrameBuff list added: additional optional buff list displayed even if not casted by playerPerformanceCounter:Start/Stop added to compute cpu time of functionPriority debuff fixedBug fixed with macro cooldownMacro tooltip fixedList with unitframes by unit -> check event ATTRIBUTE_CHANGED (see Healium) -> DOESNT WORK ANYMORE (HookScript is overwritten by SetScript in oUF:initObject)Glowing overlay added (SPELL_ACTIVATION_OVERLAY_GLOW_SHOW) -> Cause some protected method to be called, when using ActionButton_ShowOverlayGlow/ActionButton_HideOverlayGlow (taint issues)Memory leaked in UpdateFrameBuffsDebuffsPrereqs removedVersion 1.5TOC update for 4.3Version 1.4Buff check on spellName instead of spellID (fix a bug with Prayer of Mending)Add a warning if spec settings found without any spellsVersion 1.3flashStyle renamed to dispelAnimationFLASH dispelAnimation renamed to BLINKnew dispelAnimation: PULSEpriorityDebuff added (display highest priority debuff, dispellable (=0) have highest priority)optional priority parameter in debuff whitelist added (lower value (>0) means higher priority)bug fixed: buff and debuff list are correctly built even if too many buff/debuff, missing 'local' in buff update, PerformanceCounter:Dump()components.lua renamed to core.luaAddHealiumComponents renamed to RegisterFrame (return true if successfull and false otherwise)Initialize method added, must be called before using Healium (merge config from caller with Healium config)Compact mode added -> STILL IN TEST MODEForbearance (25771) debuff prereq added for paladinAdditional dispellable filter on debuff: when affected by a debuff in this list, debuff is shown but is not highlighted neither flashed and sound is not playedOOM optimized: don't check more than once every 0.2sec (30% less OOM check)Config merging in H:Initialize fixedtekDebug support addedPrivate namespace addedVersion 1.2Greetings message removedVersion 1.1Huge memory leaked fixedRespec bug fixedConsole commands fixedVersion 1.0Main functionality addedStyle explanation-----------------SkinButton: function(frame, button) [OPTIONAL] skin heal buttonSkinDebuff: function(frame, debuff) [OPTIONAL] skin debuffSkinBuff: function(frame, buff) [OPTIONAL] skin buffAnchorButton: function(frame, button, buttonList, index) [OPTIONAL, default:on the right of frame] set heal button anchoringAnchorDebuff: function(frame, debuff, debuffList, index) [OPTIONAL, default: on the right of last button   or    center of frame if priority debuff] set debuff anchoringAnchorBuff: function(frame, buff, buffList, index) [OPTIONAL, default: on the left of frame] set buff anchoringPriorityDebuff: true|false (display only one debuff with priority) [OPTIONAL, default:false]Class config explanation------------------------C["classname"] = {	predefined = {		--[1] = { ... }								-- see below (spellID, macroName, buffs, ...)		-- list of spells see below	},	[1] = { -- Active when first talent tree is current spec		buffs = {			aaa,										-- spellID of buff			bbb,										-- spellID of buff			{				spellID = yyy,							-- spellID of buff				display = "value1"|"value2"|"value3"	-- additional value to display when affected by buff			...		}		spells = { -- list of spells to bind on Healium buttons			-- 1st button			{				id = zzz								-- index in predefined list [id or spellID or macroName]				-- OR				spellID = xxx,							-- spellID, use www.wowhead.com to find spellID [id or spellID or macroName]				-- OR				macroName = "macro",					-- macro bind on button [id or spellID or macroName]				--				buffs = { aaa, bbb },					-- button is inactive unless buff with spellID aaa or bbb is present on unit [OPTIONAL]				debuffs = { ccc, ddd },					-- button is active unless debuff with spellID ccc or ddd is present on unit [OPTIONAL]				rez = true|false,						-- spell is a rez? (button will stay active when unit is dead/ghost) [OPTIONAL]				dispels = { -- [OPTIONAL]					["Poison"] = true|false|function,	-- spell may dispel Poison? [OPTIONAL]					["Magic"] = true|false|function,	-- spell may dispel Magic? [OPTIONAL]					["Curse"] = true|false|function,	-- spell may dispel Curse? [OPTIONAL]					["Disease"] = true|false|function,	-- spell may dispel Disease? [OPTIONAL]				},				transforms = { -- [OPTIONAL]					[eee] = { spellID = fff },			-- if player is affected by buff with spellID eee then spell is transformed to spellID fff					...				},				display = "value1"|"value2"|"value3", 	-- additional value to display when spell applies buff with the same same [OPTIONAL]			},			-- 2nd button, same as above			-- 3rd button, same as above			-- ...		}	},	[2] = { -- Active when second talent tree is current spec		-- same as above	},	[3] = { -- Active when third talent tree is current spec		-- same as above	},}note about macro:macros must use [@mouseover] modifier to work correctly with Healium, otherwise they will use the default macro target logic (usually cast on you or your current target)here is an example macro for instant Druid's Healing Touch that works with Healium:#showtooltip/cast Nature's Swiftness/cast [@mouseover] Healing Touchnote that if you omit the [@mouseover] it will cast on your current target or yourself, instead of using the target assigned to the Healium buttonTODO----add Divine Aegis in buff to monitor in priest discipline spell list (use Necrotic Strike to test debuff)power word: shield cannot be cast if affected by weakened soul unless player is affected by divine insighteven predefined spells should be in Tukui_Healiumon dispel highlight, set frame border colorwhitelist: grouped by instanceID (GetCurrentMapAreaID)	if IsInInstance() then		SetMapToCurrentZone()		local zone = GetCurrentMapAreaID()		if ns.auras.instances[zone] then			instDebuffs = ns.auras.instances[zone]		end		else		instDebuffs = {}	endstore macroIndex (GetMacroIndexByName) instead of macroName and find MacroUpdate event to update macroIndextest if check on Parent:IsShown is effective -> YES but UpdateCooldowns, UpdateOOM are called even if no frames are showntest OnAttributeChanged on buttons to handle Transforms (maybe use spellID or bookSpellID)frame.hShields should be indexed on spellID